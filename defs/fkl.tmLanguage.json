{
  "scopeName": "source.fkl",
  "name": "Feakin definition Language",
  "fileTypes": ["fkl"],
  "patterns": [
    { "include": "#block_comment" },
    { "include": "#line_comment" },
    { "include": "#identifier" },
    { "include": "#string" }
  ],
  "repository": {
    "block_comment": {
      "patterns": [
        {
          "patterns": [
            {
              "match": "(\\/\\*)((?>(?:[^\\*]|(?>\\*+)[^\\/])*)((?>\\*+)\\/))",
              "captures": {
                "1": {
                  "name": "comment.block.fkl punctuation.definition.comment.begin.fkl"
                },
                "2": {
                  "name": "comment.block.fkl"
                },
                "3": {
                  "patterns": [
                    {
                      "match": "\\*\\/",
                      "name": "comment.block.fkl punctuation.definition.comment.end.fkl"
                    },
                    {
                      "match": "\\*",
                      "name": "comment.block.fkl"
                    }
                  ]
                }
              }
            },
            {
              "match": "(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/))",
              "captures": {
                "1": {
                  "name": "comment.block.fkl punctuation.definition.comment.begin.fkl"
                },
                "2": {
                  "name": "comment.block.fkl"
                },
                "3": {
                  "patterns": [
                    {
                      "match": "\\*\\/",
                      "name": "comment.block.fkl punctuation.definition.comment.end.fkl"
                    },
                    {
                      "match": "\\*",
                      "name": "comment.block.fkl"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "match": "(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/))",
          "captures": {
            "1": {
              "name": "comment.block.fkl punctuation.definition.comment.begin.fkl"
            },
            "2": {
              "name": "comment.block.fkl"
            },
            "3": {
              "patterns": [
                {
                  "match": "\\*\\/",
                  "name": "comment.block.fkl punctuation.definition.comment.end.fkl"
                },
                {
                  "match": "\\*",
                  "name": "comment.block.fkl"
                }
              ]
            }
          }
        }
      ]
    },
    "line_comment": {
      "patterns": [
        {
          "begin": "\\s*+(\\/\\/)",
          "end": "(?<=\\n)(?<!\\\\\\n)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.comment.fkl"
            }
          },
          "endCaptures": {},
          "name": "comment.line.double-slash.fkl",
          "patterns": [
            {
              "include": "#line_continuation_character"
            }
          ]
        },
        {
          "begin": "\\s*+(\\/\\/)",
          "end": "(?<=\\n)(?<!\\\\\\n)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.comment.fkl"
            }
          },
          "endCaptures": {},
          "name": "comment.line.double-slash.fkl",
          "patterns": [
            {
              "include": "#line_continuation_character"
            }
          ]
        }
      ]
    },
    "line_continuation_character": {
      "patterns": [
        {
          "match": "(\\\\)\\n",
          "captures": {
            "1": {
              "name": "constant.character.escape.line-continuation.fkl"
            }
          }
        }
      ]
    },
    "identifier": {
      "patterns": [
        {
          "name": "other.identifier.fkl",
          "match": "[_a-zA-Z][_a-zA-Z0-9]*"
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "name": "string.quoted.double.c",
          "begin": "\"",
          "end": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.fkl"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.fkl"
            }
          },
          "patterns": [
            {
              "include": "#line_continuation_character"
            },
            {
              "include": "#escape_sequence"
            }
          ]
        }
      ]
    },
    "escape_sequence": {
      "patterns": [
        {
          "match": "\\\\([\\\\abfnrtv\"'?]|x[a-fA-F0-9]{2}|[0-7]{1,3})",
          "captures": {
            "1": {
              "name": "constant.character.escape.fkl"
            }
          }
        }
      ]
    },
    "comma": {
      "patterns": [
        {
          "match": ",",
          "name": "punctuation.separator.comma.fkl"
        }
      ]
    },
    "colon": {
      "patterns": [
        {
          "match": ":",
          "name": "punctuation.separator.colon.fkl"
        }
      ]
    },
    "double_colon": {
      "patterns": [
        {
          "match": "::",
          "name": "punctuation.separator.double-colon.fkl"
        }
      ]
    },
    "semicolon": {
      "patterns": [
        {
          "match": ";",
          "name": "punctuation.separator.semicolon.fkl"
        }
      ]
    },
    "left_brace": {
      "patterns": [
        {
          "match": "\\{",
          "name": "punctuation.section.block.begin.fkl"
        }
      ]
    },
    "right_brace": {
      "patterns": [
        {
          "match": "\\}",
          "name": "punctuation.section.block.end.fkl"
        }
      ]
    },
    "equal": {
      "patterns": [
        {
          "match": "=",
          "name": "keyword.operator.assignment.fkl"
        }
      ]
    },
    "quota": {
      "patterns": [
        {
          "match": "'",
          "name": "punctuation.definition.string.begin.fkl"
        }
      ]
    },
    "left_parenthesis": {
      "patterns": [
        {
          "match": "\\(",
          "name": "punctuation.section.parens.begin.fkl"
        }
      ]
    },
    "right_parenthesis": {
      "patterns": [
        {
          "match": "\\)",
          "name": "punctuation.section.parens.end.fkl"
        }
      ]
    },
    "less_than": {
      "patterns": [
        {
          "match": "<",
          "name": "keyword.operator.comparison.fkl"
        }
      ]
    },
    "greater_than": {
      "patterns": [
        {
          "match": ">",
          "name": "keyword.operator.comparison.fkl"
        }
      ]
    },
    "dot": {
      "patterns": [
        {
          "match": "\\.",
          "name": "punctuation.accessor.dot.fkl"
        }
      ]
    },
    "right_arrow": {
      "patterns": [
        {
          "match": "->",
          "name": "keyword.operator.arrow.fkl"
        }
      ]
    },
    "left_arrow": {
      "patterns": [
        {
          "match": "<-",
          "name": "keyword.operator.arrow.fkl"
        }
      ]
    },
    "double_side_arrow": {
      "patterns": [
        {
          "match": "<->",
          "name": "keyword.operator.arrow.fkl"
        }
      ]
    },
    "connection": {
      "patterns": [
        {
          "match": "--",
          "name": "keyword.operator.connection.fkl"
        }
      ]
    },
    "keywords_general": {
      "patterns": [
        {
          "name": "keywords.general.fkl",
          "match": "\\b(ContextMap|Context|Aggregate|Entity|ValueObject|Struct|impl|endpoint|request|response)\\b"
        }
      ]
    },
    "keywords_request": {
      "patterns": [
        {
          "name": "keywords.request.fkl",
          "match": "\\b(POST|GET|PUT|DELETE|PATCH|HEAD|OPTIONS|TRACE|CONNECT|authorization)\\b"
        }
      ]
    },
    "keywords_auth": {
      "patterns": [
        {
          "name": "keywords.auth.fkl",
          "match": "\\b(Anonymous|Basic|Bearer|OAuth2|OpenIDConnect)\\b"
        }
      ]
    },
    "keywords_flow": {
      "patterns": [
        {
          "name": "keywords.flow.fkl",
          "match": "\b(flow|via|receive|send|from|to)\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        { "include": "#keywords_general" },
        { "include": "#keywords_request" },
        { "include": "#keywords_auth" },
        { "include": "#keywords_flow" }
      ]
    }
  }
}
